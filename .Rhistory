head(data)
is.infinite(data$X21C..1.6)
data[is.infinite(data$X21C..1.6),]
g <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C.1.6)))
g <- g + geom_hex()
library(ggplot2)
g <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C.1.6)))
g <- g + geom_hex()
g
g <- ggplot(data = data, aes(x = log(data$X21A.1.6), y = log(data$X21B..1.6)))
g <- g + geom_hex()
g
data[is.infinite(data$X21C..1.6),]
data[is.finite(data$X21C..1.6),]
data[is.isfinite(data$X21C..1.6),]
data[data$X21C..1.6) <= 0, ]
data[data$X21C..1.6 <= 0, ]
head(data)
data[data$X21C..1.6 <= 0, ] <- 0.0000001
data[data$X21C..1.6 <= 0, ] <- 0.001
data[data$X21B.1.6 <= 0, ] <- 0.001
data[data$X21A.1.6 <= 0, ] <- 0.001
g <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C.1.6)))
g <- g + geom_hex()
g
g <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
g <- g + geom_hex()
g
g <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
g <- g + geom_hex(bins = 10)
g
g <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
g <- g + geom_hex(bins = 50)
g
smoothScatter(log(data$X21B.1.6), log(data$X21C.1.6))
smoothScatter(log(data$X21B.1.6), log(data$X21C..1.6))
smoothScatter(log(data$X21A.1.6), log(data$X21B.1.6))
data <- read.csv("21ABC rk ave summary-U.csv", header=T)
plot(log(data$X21B.1.6), log(data$X21C.1.6))
data <- read.csv("21ABC rk ave summary-U.csv", header=T)
g <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
g <- g + geom_hex(bins = 50)
g
g
p <- ggplot(data = data, aes(x = log(data$X21A.1.6), y = log(data$X21C..1.6)))
p <- p + geom_hex(bins = 50)
p
q <- ggplot(data = data, aes(x = log(data$X21A.1.6), y = log(data$X21B.1.6)))
q <- q + geom_hex(bins = 50)
q
g <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
g <- (g + geom_hex(bins = 50)
+ xlim(1.2, -8)
+ ylim(1.2, -8)
)
g
g <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
g <- (g + geom_hex(bins = 50)
)
g
g <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
g <- (g + geom_hex(bins = 50)
+ xlim(-7, 1.2)
+ ylim(-7, 1.2)
)
g
g <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
g <- (g + geom_hex(bins = 50)
+ xlim(-7, 2)
+ ylim(-7, 2)
)
g
g <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
g <- (g + geom_hex(bins = 50)
+ xlim(-7, 3)
+ ylim(-7, 3)
)
g
g <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
g <- (g + geom_hex(bins = 50)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
)
g
p <- ggplot(data = data, aes(x = log(data$X21A.1.6), y = log(data$X21C..1.6)))
p <- p + geom_hex(bins = 50)
p
p <- ggplot(data = data, aes(x = log(data$X21A.1.6), y = log(data$X21C..1.6)))
p <- (p + geom_hex(bins = 50)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
)
p
q <- ggplot(data = data, aes(x = log(data$X21A.1.6), y = log(data$X21B.1.6)))
q <- q + geom_hex(bins = 50)
q
q <- ggplot(data = data, aes(x = log(data$X21A.1.6), y = log(data$X21B.1.6)))
q <- (q + geom_hex(bins = 50)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
)
q
plot(data$MFEA, data$MFEB)
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6), fill = MFEB))
MFE <- (MFE + geom_point()
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(fill = data$MFEB), colour = "white")
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB))
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.5)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.5)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradientn(colours = terrain.colors(10))
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.5)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradientn(colours = terrain.colors(5))
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.5)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradient(low = "blue", high = "orange")
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.5)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradient(low = "blue", high = "red")
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.5)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradient(low = "blue", mid = "steelblue", high = "orange")
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.5)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradient(low = "blue", mid = "green", high = "orange")
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.5)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_fill_gradient(low = "blue", mid = "green", high = "orange")
)
MFE
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.5)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_fill_gradient(low = "blue", high = "orange")
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.5)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradient(low = "blue", high = "orange")
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.3)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradient(low = "blue", high = "orange")
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.3)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradient(low = "blue", high = "red")
)
MFE
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.3)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradient(low = "blue", high = "yellow")
)
MFE
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.3)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
#+ scale_colour_gradient(low = "blue", high = "yellow")
+scale_colour_gradient3()
)
MFE
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.3)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
#+ scale_colour_gradient(low = "blue", high = "yellow")
+scale_colour_gradient2()
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.3)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
#+ scale_colour_gradient(low = "blue", high = "yellow")
+scale_colour_gradient4()
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.3)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
#+ scale_colour_gradient(low = "blue", high = "yellow")
+scale_colour_gradient(colours=rainbow(2))
)
MFE
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.3)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
#+ scale_colour_gradient(low = "blue", high = "yellow")
+scale_colour_gradient(colours=rainbow(4))
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.3)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
#+ scale_colour_gradient(low = "blue", high = "yellow")
+ scale_colour_gradient(colours=rainbow(4))
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.3)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
#+ scale_colour_gradient(low = "blue", high = "yellow")
+ scale_colour_gradient(colours=rainbow(4))
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.3)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradient(colours=rainbow(4))
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.3)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradientn(colours=rainbow(4))
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.3)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradientn(colours=rainbow(2))
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.3)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradientn(colours=rainbow(5))
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.3)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradientn(colours=spectral(5))
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.3)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradientn(colours=spectral())
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.3)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradientn(palette="Spectral")
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.3)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradient(palette="Spectral")
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.3)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_hue()
)
MFE
library("RColorBrewer")
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.3)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_brewer(palette = "PRGn")
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.3)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradientn(palette = "PRGn")
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.3)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradient(palette = "PRGn")
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.3)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradientn(colours = heat.colors(4))
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.3)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradientn(colours = topo.colors(8))
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.3)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradientn(colours = terrain.colors(8))
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.3)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradientn(colours = rainbow.colors(14))
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.3)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradientn(colours = rainbow(14))
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.3)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradientn(colours = cm.colors(14))
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.6)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradientn(colours = topo.colors(14))
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.6)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradientn(colours = rev(topo.colors(14)))
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.6)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradientn(colours = rev(hue(14)))
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.6)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradientn(colours = rev(terrain.colors(14)))
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.6)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradientn(colours = terrain.colors(14))
+ bw()
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.6)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradientn(colours = terrain.colors(14))
+ theme_bw()
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.6)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradientn(colours = terrain.colors(14))
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.6)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_colour_gradientn(colours = cm.colors(14))
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.6)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_color_distiller(palette = "RdPu")
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = abs(data$MFEB)), alpha = 0.6)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_color_distiller(palette = "RdPu")
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = abs(data$MFEA)), alpha = 0.6)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_color_gradientn(colours = rainbow(14))
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = abs(data$MFEA)), alpha = 0.6)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_color_gradientn(colours = rainbow(14))
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21B.1.6), y = log(data$X21C..1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEA), alpha = 0.6)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_color_gradientn(colours = rainbow(14))
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21A.1.6), y = log(data$X21B.1.6)))
MFE <- (MFE + geom_point(aes(colour = abs(data$MFEB)), alpha = 0.6)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_color_gradientn(colours = rainbow(14))
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21A.1.6), y = log(data$X21B.1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.6)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_color_gradientn(colours = rainbow(14))
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21A.1.6), y = log(data$X21B.1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.6)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_color_gradientn(colours = hue(14))
)
MFE
MFE <- ggplot(data = data, aes(x = log(data$X21A.1.6), y = log(data$X21B.1.6)))
MFE <- (MFE + geom_point(aes(colour = data$MFEB), alpha = 0.6)
+ xlim(-7, 2.5)
+ ylim(-7, 2.5)
+ scale_color_gradientn(colours = terrain.colors(14))
)
MFE
